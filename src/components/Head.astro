---
import { siteData } from '@/lib/config';

export interface Props {
  author?: string;
  image?: string;
  title?: string;
  description?: string;
}

const {
  author = siteData.author,
  image = siteData.image,
  title = siteData.title,
  description = siteData.description
} = Astro.props as Props;
---

<head>
  <meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="author" content={author} />
  <meta name="description" content={description} />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image, Astro.url)} />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(image, Astro.url)} />

  <link rel="sitemap" href="/sitemap-index.xml">
	<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="apple-touch-icon" href="/favicon.svg" />
	<title>{title}</title>

  <!-- Dark-mode script -->
  <script is:inline>
    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme')
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark'
      }
      return 'light'
    })()
    if (theme === 'light') {
      document.documentElement.classList.remove('dark')
    } else {
      document.documentElement.classList.add('dark')
    }
  </script>

  <slot />
</head>


